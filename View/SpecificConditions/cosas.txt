*validar el nivel de permiso siempre debe de ser 2. mirar en el controlador. //Listo

*Necesitamos validar que el campo usuario no pueda repetirse validar que si existe no lo deje crear.// ya esta validado pero hacerle la misma 
validación que le realize al code_education.
 
*¿Por que en el index de grupo del admin deja crear grupo ?
*A donde debe ir después de que ingrese la institución y el usuario.? //Listo


prueba341


public function findinstitution($institutioname=null,$institutionid= null){
		
		$this->set('institutioname',$institutioname);
		$this->set('institutionid',$institutionid);
		if ($this->request->is('post'))
		{
			$username= $this->request->data['User']['username'];
			
			$verificar_usuario=$this->User->query("select distinct username from user where username = '$username'");
			$this->set('verificar_usuario',$verificar_usuario);
			
			if($verificar_usuario==Array( )){				
				
				$this->Institution->create();
				$data=$this->request->data;				
					if ($this->Institution->save($data)) 
					{				
						$this->Session->setFlash(__('El responsable ha sido guardado.'));
						//$id_user = $this->User->id;
						//return $this->redirect(array('action' => 'index'));
						//return $this->redirect(array('controller' => 'users', 'action' => 'adduser',$institution,$institutionid));
						return $this->redirect(array('controller' => 'Users', 'action' => 'login'));
					} 
					else 
					{
						$this->Session->setFlash(__('El responsable no pudó ser guardado. Por favor, inténtelo de nuevo.'));
					}
			}
			else 
			{
					$this->Session->setFlash(__('El nombre de usuario no está disponible, por favor ingrese uno nuevo.'));
			}
					
		}
		//$institutions = $this->Responsible->Institution->find('list',array('order'=>array('Institution.name ASC')));
		$institutions = $this->Institution->find('list',array('order'=>array('Institution.name ASC')));
		$this->set(compact('institutions'));
	
	}

public function find_code()
	{
		$this->request->onlyAllow('ajax'); // No direct access via browser URL - Note for Cake2.5: allowMethod()
		
		$code_educ = $this->request->data['string'];
		$data=$this->request->data;
		$data['debug']['POST']=$code_educ;
		$data['debug']['POSTCOMPLETE']=$this->request->data;
		$verificar_code=$this->Institution->query("select distinct code_education from institution where code_education = '$code_educ'");
		//$this->set('verificar_code',$verificar_code);
		$this->set("message", "You are good");
		if(!$verificar_code == array())
		{
				$data['existe']=true;
				$data['response']='<div style="color:#FF0000">El código ya existe intente con uno nuevo ó regrese a la página anterior.</div>';
			
		}		
		else{
			$data['existe']=false;
			$data['response']='<div style="color:#088A29">El código esta disponible, por favor continué.</div>';
		}	
		
		$this->set(compact('data'));
		$this->set('_serialize', array('data')); // Let the JsonView class know what variable to use
	}
$(document).on('change','#username',function(){
		$('#Infouser').html('<img src="img/loader.gif" alt="" />').fadeOut(1000);
 		var username = $(this).val();		
 		var dataString =username;
 		
 		$.ajax({
             type: "POST",
             url: "find_username.json",
             dataType:'json',
             data: {string:dataString},
             success: function(data) {
            	 console.log(data.data.response);
            	 console.log(data);
 				 $('#Infouser').fadeIn(1000).html(data.data.response);
             }
         });
     });    

2091


------------------------------
public function view_inscription($id_group=null)  {

	
		//$this->set('institution',$institution);
		//debug($institution);
		$this->set('id_group',$id_group);
		
		$usuario = $this->Session->read('Auth.User.username');
		$this->set('usuario',$usuario);
		
		$groupid=$this->Workshop->query("select groups.id_group,groups.name,groups.members_number,groups.user_id from groups inner join user on groups.user_id = user.id_user  where user.username = '$usuario' and groups.id_group = '$id_group' ");
		//debug($institutionid);
		
		foreach ($groupid as $groupid):		
		$groupidp=$groupid['groups']['id_group'];
		$groupname=$groupid['groups']['name'];
		$groupnumber=$groupid['groups']['members_number'];
		$groupuser=$groupid['groups']['user_id'];
		//debug($institutionname);
		
		endforeach;
		$this->set('groupidp',$groupidp);
		$this->set('groupname',$groupname);
		$this->set('groupnumber',$groupnumber);
		$this->set('groupuser',$groupuser);
		//Nombre y Celular del Responsable o Encargado...
		$responsibles=$this->User->find('all', array('conditions'=>array('id_user'=>$groupuser),'fields'=>array('name','celular','id_user')));
		$rname=null;
		$rcelular=null;
		$rcedula=null;
		foreach ($responsibles as $responsible){
				$rname=$responsible['User']['name'];
				$rcelular=$responsible['User']['celular'];	
				$rcedula=$responsible['User']['id_user'];
		}
		$this->set('rname',$rname);
		$this->set('rcelular',$rcelular);
		$this->set('rcedula',$rcedula);
		//fin
		//$condicion=$this->Workshop->query("select workshop_session.group_id from workshop_session inner join groups on workshop_session.group_id = groups.id_group where workshop_session.group_id = $groupidp");
		$condicion=$this->Workshop->query("select group_id,workshop_id,workshop_day,workshop_time,travel_time from workshop_session where group_id = $groupidp");
		
		//$condicion=";
		//$condicion="select user.institution_id from user inner join (institution inner join workshop_session on institution.id_institution = workshop_session.institution_id) on user.institution_id = institution.id_institution where user.username = $usuario";
		//$queryid="select distinct workshop.id_workshop from specific_condition inner join (specific_condition_workshop inner join (public_type inner join (public_type_workshop inner join (workshop inner join workshop_session on workshop.id_workshop = workshop_session.workshop_id) on public_type_workshop.workshop_id = workshop.id_workshop) on public_type.id_public_type = public_type_workshop.public_type_id) on specific_condition_workshop.workshop_id = workshop.id_workshop) on  specific_condition.id_specific_condition = specific_condition_workshop.specific_condition_id where workshop_session.workshop_day = '$datework' and public_type.name = '$public_typep' and specific_condition.name = ";
		//$condicion=$this->Workshop->query($condicion);
		//$this->set(compact('tallerday'));
		
		$institutionid=$this->Workshop->query("select institution_id from institution_user where user_id='$rcedula' group by institution_id limit 1");
		foreach ($institutionid as $institutionid):
		$institutionidn=$institutionid['institution_user']['institution_id'];
		
		endforeach;

		
		$this->set('condicion',$condicion);
		$condicionp='';
		foreach ($condicion as $condiciones):
		$condicionp=$condiciones['workshop_session']['group_id'];		
		
		endforeach;
		$this->set('condicionp',$condicionp);		
		
		
		if ($condicionp != 0)
		{
			
			foreach ($condicion as $condiciones):
			$condicionid=$condiciones['workshop_session']['workshop_id'];
			$condiciond=$condiciones['workshop_session']['workshop_day'];
			$condiciont=$condiciones['workshop_session']['workshop_time'];
			$condiciontra=$condiciones['workshop_session']['travel_time'];
			endforeach;
			$this->set('condiciond',$condiciond);
			$this->set('condiciont',$condiciont);
			$this->set('condiciontra',$condiciontra);
			$this->set('condicionid',$condicionid);
			
			$condicioname=$this->Workshop->query("select name from workshop where id_workshop = $condicionid");
			foreach ($condicioname as $condicionm):
			$condicionnom=$condicionm['workshop']['name'];
			endforeach;
			$this->set('condicionnom',$condicionnom);
			
			//$correoi=$this->User->query("select distinct mail from responsible inner join (insitution inner join user on institution.id_institution=user.institution_id)on responsible.institution_id=institution.id_institution where id_responsible = '$crcedula'");
			$correoi=$this->User->find('all', array('conditions'=>array('id_user'=>$groupuser)));
			$correoi2=$this->Institution->find('all', array('conditions'=>array('id_institution'=>$institutionidn)));
			$this->set('correoi',$correoi);
			$this->set('correoi2',$correoi2);
			$Email = new CakeEmail('gmail');
			$Email->from(array('publicos@fiestadellibroylacultura.com' => 'Fiesta del Libro y la Cultura'));
			foreach ($correoi as $correoi):
			$email_c = $correoi['User']['mail'];			
			endforeach;
			foreach ($correoi2 as $correoi2):			
			$email_c2 = $correoi2['Institution']['mail'];
			endforeach;
			$Email->to($email_c);
			$Email->cc($email_c2);
			$Email->subject('Inscripción exitosa!!!');
			//$link='http://aplicaciones.medellin.co/reservasfiestadellibro/workshops/index_inscription/'.$usuario;
			$mensaje1="\n\n¡Qué bien! Estos son los datos del taller que inscribiste para tu grupo, recuerda que puedes "; 
			$mensaje12="hacer click en imprimir para generar la hoja de registro, y que debes presentar este documento en el ingreso el día que tengas tu visita. (si no tienes disponible impresora en el momento, puedes volver a ingresar en cualquier momento con tu usuario y contraseña para imprimirla, además te llegará una copia a tu correo electrónico) \n\n";
			$mensaje11="El Día: ";			
			$mensaje2="\nNombre Taller: ";			
			$mensaje3="\nHora Taller: ";		
			$mensaje4="\nHora Recorrido: ";
			$mensaje5="\nNombre del Encargado: ";
			$mensaje6="\nCelular del Encargado: ";
			$mensaje7="\nCantidad de Inscritos: ";
			$recomendaciones="\n\nRecomendaciones:";
			$recomendacion10="\n\n • Todos los talleres se realizan en el Jardín Botánico de Medellín."; 
			$recomendacion1="\n\n• El ingreso de los grupos será por la entrada peatonal del Jardín Botánico. (Cerca de la estación Universidad del Metro, Calle 73)"; 
			$recomendacion11="\n\n • Es necesario que su grupo llegue con 30 minutos de antelación para hacer el registro y que no se retrase la actividad."; 
			$recomendacion12="\n\n • Recuerde que la duración  de la actividad es de dos (2) horas para cada uno de los grupos, es importante tener en cuenta que esta programación se hace con el fin de atender a todo el público que quiera asistir a la Fiesta, por lo tanto es indispensable respetar las actividades programadas para los demás grupos y no ingresar a las carpas de promoción de lectura sin autorización.";
			$recomendacion21="\n\n• Durante la actividad el grupo contará con el acompañamiento de un guía, pero es indispensable que el responsable del grupo esté permanentemente.";
			$recomendacion32="\n\n• Su institución es responsable del transporte y la alimentación de los grupos. Se puede ingresar alimentos a las instalaciones del Jardín Botánico.";
			$recomendacion41="\n\n• Es necesario que los grupos de primera infancia y hasta los 8 años estén identificados con escarapela.";
			$recomendacion42="\n\n• Es importante llevar hidratación.";
			$recomendacion43="\n\n• La entrada y participación en el evento no tienen costo, la ciudadanía de Medellín ya pagó con sus impuestos.";
			$recomendacion44="\n\n Gracias por hacer parte de esta gran fiesta de ciudad que durante diez días nos recordará";
			$recomendacion45="\n\n que Medellín es Lectura Viva";
			$recomendacion46="\n\n ES INDISPENSABLE PRESENTAR ESTE FORMATO AL INGRESO DEL JARDÍN BOTÁNICO";
			$recomendacion47="\n\n Mayores informes:";
			$recomendacion48="\n\n Alejandra Gallo López";
			$recomendacion49="\n\n Líder Jardín Lectura Viva";
			$recomendacion40="\n\n 4448691 ext 111";
			$recomendacion50="\n\n 3012169301";
			$recomendacion51="\n\ninscripciones@fiestadellibroylacultura.com";
			$recomendacion52="\n\n Pablo López Londoño";
			$recomendacion53="\n\n Líder Públicos Dirigidos";
			$recomendacion54="\n\n 4448691 ext 109";
			$recomendacion55="\n\n 3147984567";
			$recomendacion56="\n\n inscripcionespublicos@fiestadellibroylacultura.com";
			$norespuesta="\n\n Este correo es informativo, favor no responder a esta dirección de correo, ya que no se encuentra habilitada para recibir mensajes.";
			$dia_taller= date('d M Y', strtotime($condiciond));
			$hora_taller= date('h i a', strtotime($condiciont));
			$hora_recorrido= date('h i a', strtotime($condiciontra));
			$Email->send($mensaje1.$mensaje12.$mensaje11.$dia_taller.
			$mensaje2.$condicionnom.$mensaje3.$hora_taller.$mensaje4.
			$hora_recorrido.$mensaje5.$rname.$mensaje6.$rcelular.$mensaje7.
			$groupnumber.$recomendaciones.$recomendacion10.$recomendacion1.$recomendacion11.$recomendacion12.$recomendacion21.
			$recomendacion32.$recomendacion41.$recomendacion42.$recomendacion43.$recomendacion44.$recomendacion45.$recomendacion46.
			$recomendacion47.$recomendacion48.$recomendacion49.$recomendacion40.$recomendacion50.$recomendacion51.$recomendacion52.
			$recomendacion53.$recomendacion54.$recomendacion55.$recomendacion56.$norespuesta);

		}
	}
	float:right;
	width:74%;
	border-left:1px solid #666;
	padding:10px 2%;

j41l3rsl
1022097184

mdeinteligente.co
c1udad1ntel1gente